<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<context:property-placeholder
		properties-ref="deployProperties" />

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<!-- Scans the classpath for annotated components that will be auto-registered 
		as Spring beans. For example @Controller and @Service. Make sure to set the 
		correct base-package -->
	<context:component-scan base-package="com.tquila" />

	<!-- Configures the annotation-driven Spring MVC Controller programming 
		model. Note that, with Spring 3.0, this tag works in Servlet MVC only! -->
	<mvc:annotation-driven />

	<mvc:resources mapping="/resources/**" location="/resources/" />
	<!-- Imports data-source configuration -->
	<import resource="spring-data.xml" />

	<bean id="deployProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean"
		p:location="/WEB-INF/spring.properties" />

	<!-- Example of setting Java Beans from XML file, for AutoWire -->
	<bean id='PersonBean' class='com.tquila.domain.Person'>
		<property name='name' value='Bobby is the boss.' />
	</bean>

	<!-- JSON producer via Jackson -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
		id="jackson">
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property value="org.springframework.web.servlet.view.tiles2.TilesView" name="viewClass"/>
					<!-- Using Apache Tiles 2 with Spring
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />					
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".jsp" />
					 -->
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<property name="prefixJson" value="true" />
				</bean>
			</list>
		</property>
	</bean>
	
	<!--  Tile Configure for Spring/Tile integration -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/views/layout.xml</value>
				<value>/WEB-INF/views/tiled-views.xml</value>
			</list>
		</property>
	</bean>	
</beans>
